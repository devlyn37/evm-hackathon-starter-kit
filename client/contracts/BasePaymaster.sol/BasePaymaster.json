{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\",\"deadline\":\"the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. validates that the postOp is called only by the entryPoint\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b\",\"dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326\",\"dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec\",\"dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61\",\"dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b\",\"dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806\",\"dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required.",
              "deadline": "the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/account-abstraction/contracts/core/BasePaymaster.sol": "BasePaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6",
        "urls": [
          "bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b",
          "dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26",
        "urls": [
          "bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326",
          "dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9",
        "urls": [
          "bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec",
          "dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33",
        "urls": [
          "bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61",
          "dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3",
        "urls": [
          "bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b",
          "dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd",
        "urls": [
          "bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806",
          "dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
    "id": 205,
    "exportedSymbols": {
      "BasePaymaster": [
        204
      ],
      "Context": [
        830
      ],
      "IAggregator": [
        238
      ],
      "IEntryPoint": [
        427
      ],
      "IPaymaster": [
        462
      ],
      "IStakeManager": [
        566
      ],
      "Ownable": [
        808
      ],
      "UserOperation": [
        591
      ],
      "UserOperationLib": [
        695
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3914:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "36:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "99:52:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 205,
        "sourceUnit": 809,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "152:38:0",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/IPaymaster.sol",
        "file": "../interfaces/IPaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 205,
        "sourceUnit": 463,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "191:39:0",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "file": "../interfaces/IEntryPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 205,
        "sourceUnit": 428,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 204,
        "nodeType": "ContractDefinition",
        "src": "384:3565:0",
        "nodes": [
          {
            "id": 12,
            "nodeType": "VariableDeclaration",
            "src": "445:29:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "b0d691fe",
            "mutability": "mutable",
            "name": "entryPoint",
            "nameLocation": "464:10:0",
            "scope": 204,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntryPoint_$427",
              "typeString": "contract IEntryPoint"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "IEntryPoint",
                "nameLocations": [
                  "445:11:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 427,
                "src": "445:11:0"
              },
              "referencedDeclaration": 427,
              "src": "445:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntryPoint_$427",
                "typeString": "contract IEntryPoint"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23,
            "nodeType": "FunctionDefinition",
            "src": "481:80:0",
            "nodes": [],
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "518:43:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19,
                        "name": "_entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "542:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      ],
                      "id": 18,
                      "name": "setEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "528:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IEntryPoint_$427_$returns$__$",
                        "typeString": "function (contract IEntryPoint)"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "528:26:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "505:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "493:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$427",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 14,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "493:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "493:11:0"
                    },
                    "referencedDeclaration": 427,
                    "src": "493:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "492:25:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 36,
            "nodeType": "FunctionDefinition",
            "src": "567:106:0",
            "nodes": [],
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "632:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "642:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$427",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32,
                      "name": "_entryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "655:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntryPoint_$427",
                        "typeString": "contract IEntryPoint"
                      }
                    },
                    "src": "642:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "642:24:0"
                }
              ]
            },
            "functionSelector": "584465f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "622:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "622:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "622:9:0"
              }
            ],
            "name": "setEntryPoint",
            "nameLocation": "576:13:0",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "602:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "590:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$427",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 25,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "590:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "590:11:0"
                    },
                    "referencedDeclaration": 427,
                    "src": "590:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "589:25:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51,
            "nodeType": "FunctionDefinition",
            "src": "679:208:0",
            "nodes": [],
            "baseFunctions": [
              446
            ],
            "functionSelector": "f465c77e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "688:23:0",
            "overrides": {
              "id": 45,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "821:8:0"
            },
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "735:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "712:29:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$591_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 38,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37,
                      "name": "UserOperation",
                      "nameLocations": [
                        "712:13:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "712:13:0"
                    },
                    "referencedDeclaration": 591,
                    "src": "712:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$591_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "751:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "743:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "771:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "763:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:68:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "860:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "847:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "877:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "869:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:40:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 72,
            "nodeType": "FunctionDefinition",
            "src": "893:186:0",
            "nodes": [],
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "991:88:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 62,
                      "name": "_requireFromEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "1001:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1001:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1043:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$461",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 67,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1049:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 68,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1058:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PostOpMode_$461",
                          "typeString": "enum IPaymaster.PostOpMode"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "_postOp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1035:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PostOpMode_$461_$_t_bytes_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:37:0"
                }
              ]
            },
            "baseFunctions": [
              457
            ],
            "functionSelector": "a9a23409",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postOp",
            "nameLocation": "902:6:0",
            "overrides": {
              "id": 60,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "982:8:0"
            },
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "920:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "909:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$461",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 53,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "909:10:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 461,
                      "src": "909:10:0"
                    },
                    "referencedDeclaration": 461,
                    "src": "909:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$461",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "941:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "926:22:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "958:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "950:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "908:64:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 93,
            "nodeType": "FunctionDefinition",
            "src": "1839:286:0",
            "nodes": [],
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1937:188:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 83,
                        "name": "mode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "1948:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PostOpMode_$461",
                          "typeString": "enum IPaymaster.PostOpMode"
                        }
                      },
                      {
                        "id": 84,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1954:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 85,
                        "name": "actualGasCost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1963:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 86,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1947:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_PostOpMode_$461_$_t_bytes_calldata_ptr_$_t_uint256_$",
                      "typeString": "tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256)"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d757374206f76657272696465",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2102:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        },
                        "value": "must override"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d",
                          "typeString": "literal_string \"must override\""
                        }
                      ],
                      "id": 88,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2095:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:23:0"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "1085:749:0",
              "text": " post-operation handler.\n (verified to be called only through the entryPoint)\n @dev if subclass returns a non-empty context from validatePaymasterUserOp, it must also implement this method.\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_postOp",
            "nameLocation": "1848:7:0",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "1867:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1856:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PostOpMode_$461",
                    "typeString": "enum IPaymaster.PostOpMode"
                  },
                  "typeName": {
                    "id": 75,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74,
                      "name": "PostOpMode",
                      "nameLocations": [
                        "1856:10:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 461,
                      "src": "1856:10:0"
                    },
                    "referencedDeclaration": 461,
                    "src": "1856:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PostOpMode_$461",
                      "typeString": "enum IPaymaster.PostOpMode"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "1888:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1873:22:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1905:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1897:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:64:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1937:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 110,
            "nodeType": "FunctionDefinition",
            "src": "2225:104:0",
            "nodes": [],
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "2259:70:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 105,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2316:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$204",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$204",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2308:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 103,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2308:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 97,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2269:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$427",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2280:9:0",
                        "memberName": "depositTo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 541,
                        "src": "2269:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 100,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2297:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2301:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2297:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2269:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2269:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2269:53:0"
                }
              ]
            },
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "2131:89:0",
              "text": " add a deposit for this paymaster, used for paying for transaction fees"
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2234:7:0",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:2:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:0:0"
            },
            "scope": 204,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 128,
            "nodeType": "FunctionDefinition",
            "src": "2471:149:0",
            "nodes": [],
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2557:63:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2589:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "2606:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 120,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2567:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2578:10:0",
                      "memberName": "withdrawTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 565,
                      "src": "2567:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2567:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2567:46:0"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "2335:131:0",
              "text": " withdraw value from the deposit\n @param withdrawAddress target to send to\n @param amount to withdraw"
            },
            "functionSelector": "205c2878",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 117,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2547:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "2547:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2547:9:0"
              }
            ],
            "name": "withdrawTo",
            "nameLocation": "2480:10:0",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "2507:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2491:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2532:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2524:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2490:49:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 146,
            "nodeType": "FunctionDefinition",
            "src": "2845:140:0",
            "nodes": [],
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "2914:71:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "unstakeDelaySec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "2962:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 136,
                          "name": "entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2924:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$427",
                            "typeString": "contract IEntryPoint"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2935:8:0",
                        "memberName": "addStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 547,
                        "src": "2924:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$",
                          "typeString": "function (uint32) payable external"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2951:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2955:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2951:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2924:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint32_$returns$__$value",
                        "typeString": "function (uint32) payable external"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:54:0"
                }
              ]
            },
            "documentation": {
              "id": 129,
              "nodeType": "StructuredDocumentation",
              "src": "2625:214:0",
              "text": " add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - the unstake delay for this paymaster. Can only be increased."
            },
            "functionSelector": "0396cb60",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2904:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "2904:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2904:9:0"
              }
            ],
            "name": "addStake",
            "nameLocation": "2854:8:0",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "unstakeDelaySec",
                  "nameLocation": "2870:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2863:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2862:24:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:0"
            },
            "scope": 204,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 161,
            "nodeType": "FunctionDefinition",
            "src": "3068:111:0",
            "nodes": [],
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "3120:59:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 156,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3166:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BasePaymaster_$204",
                              "typeString": "contract BasePaymaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BasePaymaster_$204",
                              "typeString": "contract BasePaymaster"
                            }
                          ],
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3158:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3158:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3158:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 152,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3137:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3148:9:0",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 535,
                      "src": "3137:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3137:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "3130:42:0"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "2991:72:0",
              "text": " return current paymaster's deposit on the entryPoint."
            },
            "functionSelector": "c399ec88",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposit",
            "nameLocation": "3077:10:0",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "3111:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3110:9:0"
            },
            "scope": 204,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 173,
            "nodeType": "FunctionDefinition",
            "src": "3338:83:0",
            "nodes": [],
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "3380:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 167,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3390:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3401:11:0",
                      "memberName": "unlockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 551,
                      "src": "3390:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:24:0"
                }
              ]
            },
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "3185:148:0",
              "text": " unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"
            },
            "functionSelector": "bb9fe6bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 164,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3370:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "3370:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3370:9:0"
              }
            ],
            "name": "unlockStake",
            "nameLocation": "3347:11:0",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3358:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 188,
            "nodeType": "FunctionDefinition",
            "src": "3640:133:0",
            "nodes": [],
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "3715:58:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "withdrawAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "3750:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 181,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3725:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$427",
                          "typeString": "contract IEntryPoint"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3736:13:0",
                      "memberName": "withdrawStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 557,
                      "src": "3725:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3725:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3725:41:0"
                }
              ]
            },
            "documentation": {
              "id": 174,
              "nodeType": "StructuredDocumentation",
              "src": "3427:208:0",
              "text": " withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress the address to send withdrawn value."
            },
            "functionSelector": "c23a5cea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 179,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 178,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3705:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 727,
                  "src": "3705:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3705:9:0"
              }
            ],
            "name": "withdrawStake",
            "nameLocation": "3649:13:0",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nameLocation": "3679:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3663:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3663:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3662:33:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3715:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 203,
            "nodeType": "FunctionDefinition",
            "src": "3837:110:0",
            "nodes": [],
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "3888:59:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3906:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3910:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3906:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 197,
                              "name": "entryPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3928:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntryPoint_$427",
                                "typeString": "contract IEntryPoint"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEntryPoint_$427",
                                "typeString": "contract IEntryPoint"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3920:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3920:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3920:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3906:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3898:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3898:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3898:42:0"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "3779:53:0",
              "text": "validate the call is made from a valid entrypoint"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireFromEntryPoint",
            "nameLocation": "3846:22:0",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3868:2:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:0:0"
            },
            "scope": 204,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "IPaymaster",
              "nameLocations": [
                "419:10:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 462,
              "src": "419:10:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "419:10:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nameLocations": [
                "431:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 808,
              "src": "431:7:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "431:7:0"
          }
        ],
        "canonicalName": "BasePaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "232:151:0",
          "text": " Helper class for creating a paymaster.\n provides helper methods for staking.\n validates that the postOp is called only by the entryPoint"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          204,
          808,
          830,
          462
        ],
        "name": "BasePaymaster",
        "nameLocation": "402:13:0",
        "scope": 205,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 0
}