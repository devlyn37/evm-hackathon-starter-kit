{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_verifyingSigner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entryPoint",
      "outputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPaymaster.PostOpMode",
          "name": "mode",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        }
      ],
      "name": "postOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "name": "setEntryPoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "maxCost",
          "type": "uint256"
        }
      ],
      "name": "validatePaymasterUserOp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "context",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyingSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610a8c380380610a8c83398101604081905261002f91610147565b8161003933610055565b610042816100a5565b506001600160a01b031660805250610181565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100ad6100cf565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461012d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b038116811461014457600080fd5b50565b6000806040838503121561015a57600080fd5b82516101658161012f565b60208401519092506101768161012f565b809150509250929050565b6080516108f061019c600039600061012901526108f06000f3fe6080604052600436106100dd5760003560e01c8063b0d691fe1161007f578063c399ec8811610059578063c399ec8814610230578063d0e30db014610253578063f2fde38b1461025b578063f465c77e1461027b57600080fd5b8063b0d691fe146101db578063bb9fe6bf146101fb578063c23a5cea1461021057600080fd5b8063584465f2116100bb578063584465f214610168578063715018a6146101885780638da5cb5b1461019d578063a9a23409146101bb57600080fd5b80630396cb60146100e2578063205c2878146100f757806323d9ac9b14610117575b600080fd5b6100f56100f03660046106de565b6102bc565b005b34801561010357600080fd5b506100f5610112366004610720565b61032b565b34801561012357600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017457600080fd5b506100f561018336600461074c565b610381565b34801561019457600080fd5b506100f56103ab565b3480156101a957600080fd5b506000546001600160a01b031661014b565b3480156101c757600080fd5b506100f56101d6366004610769565b6103bf565b3480156101e757600080fd5b5060015461014b906001600160a01b031681565b34801561020757600080fd5b506100f56103d9565b34801561021c57600080fd5b506100f561022b36600461074c565b610445565b34801561023c57600080fd5b506102456104af565b60405190815260200161015f565b6100f5610521565b34801561026757600080fd5b506100f561027636600461074c565b610567565b34801561028757600080fd5b506102ae6102963660046107f8565b60408051602081019091526000808252935093915050565b60405161015f92919061084c565b6102c46105e5565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561030f57600080fd5b505af1158015610323573d6000803e3d6000fd5b505050505050565b6103336105e5565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561030f57600080fd5b6103896105e5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103b36105e5565b6103bd600061063f565b565b6103c761068f565b6103d3848484846106a6565b50505050565b6103e16105e5565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043157600080fd5b505af11580156103d3573d6000803e3d6000fd5b61044d6105e5565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c91906108a1565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561049457600080fd5b61056f6105e5565b6001600160a01b0381166105d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105e28161063f565b50565b6000546001600160a01b031633146103bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031633146103bd57600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016105d0565b6000602082840312156106f057600080fd5b813563ffffffff8116811461070457600080fd5b9392505050565b6001600160a01b03811681146105e257600080fd5b6000806040838503121561073357600080fd5b823561073e8161070b565b946020939093013593505050565b60006020828403121561075e57600080fd5b81356107048161070b565b6000806000806060858703121561077f57600080fd5b84356003811061078e57600080fd5b9350602085013567ffffffffffffffff808211156107ab57600080fd5b818701915087601f8301126107bf57600080fd5b8135818111156107ce57600080fd5b8860208285010111156107e057600080fd5b95986020929092019750949560400135945092505050565b60008060006060848603121561080d57600080fd5b833567ffffffffffffffff81111561082457600080fd5b8401610160818703121561083757600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b8181101561087a576020818701810151606086840101520161085d565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6000602082840312156108b357600080fd5b505191905056fea2646970667358221220cbbb25ca00560124d826212b50b04d9fcf4b669659b26a5031bc3fdf00619c3f64736f6c63430008130033",
    "sourceMap": "199:531:8:-:0;;;341:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;418:11;936:32:6;719:10:7;936:18:6;:32::i;:::-;528:26:0;542:11;528:13;:26::i;:::-;-1:-1:-1;;;;;;441:34:8::1;;::::0;-1:-1:-1;199:531:8;;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;567:106:0:-;1094:13:6;:11;:13::i;:::-;642:10:0::1;:24:::0;;-1:-1:-1;;;;;;642:24:0::1;-1:-1:-1::0;;;;;642:24:0;;;::::1;::::0;;;::::1;::::0;;567:106::o;1359:130:6:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:7;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;800:2:9;1414:68:6;;;782:21:9;;;819:18;;;812:30;878:34;858:18;;;851:62;930:18;;1414:68:6;;;;;;;;1359:130::o;14:144:9:-;-1:-1:-1;;;;;102:31:9;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:430::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:44;427:5;389:44;:::i;:::-;502:2;487:18;;481:25;452:5;;-1:-1:-1;515:46:9;481:25;515:46;:::i;:::-;580:7;570:17;;;163:430;;;;;:::o;598:356::-;199:531:8;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100dd5760003560e01c8063b0d691fe1161007f578063c399ec8811610059578063c399ec8814610230578063d0e30db014610253578063f2fde38b1461025b578063f465c77e1461027b57600080fd5b8063b0d691fe146101db578063bb9fe6bf146101fb578063c23a5cea1461021057600080fd5b8063584465f2116100bb578063584465f214610168578063715018a6146101885780638da5cb5b1461019d578063a9a23409146101bb57600080fd5b80630396cb60146100e2578063205c2878146100f757806323d9ac9b14610117575b600080fd5b6100f56100f03660046106de565b6102bc565b005b34801561010357600080fd5b506100f5610112366004610720565b61032b565b34801561012357600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017457600080fd5b506100f561018336600461074c565b610381565b34801561019457600080fd5b506100f56103ab565b3480156101a957600080fd5b506000546001600160a01b031661014b565b3480156101c757600080fd5b506100f56101d6366004610769565b6103bf565b3480156101e757600080fd5b5060015461014b906001600160a01b031681565b34801561020757600080fd5b506100f56103d9565b34801561021c57600080fd5b506100f561022b36600461074c565b610445565b34801561023c57600080fd5b506102456104af565b60405190815260200161015f565b6100f5610521565b34801561026757600080fd5b506100f561027636600461074c565b610567565b34801561028757600080fd5b506102ae6102963660046107f8565b60408051602081019091526000808252935093915050565b60405161015f92919061084c565b6102c46105e5565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561030f57600080fd5b505af1158015610323573d6000803e3d6000fd5b505050505050565b6103336105e5565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561030f57600080fd5b6103896105e5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103b36105e5565b6103bd600061063f565b565b6103c761068f565b6103d3848484846106a6565b50505050565b6103e16105e5565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043157600080fd5b505af11580156103d3573d6000803e3d6000fd5b61044d6105e5565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c91906108a1565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561049457600080fd5b61056f6105e5565b6001600160a01b0381166105d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105e28161063f565b50565b6000546001600160a01b031633146103bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031633146103bd57600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016105d0565b6000602082840312156106f057600080fd5b813563ffffffff8116811461070457600080fd5b9392505050565b6001600160a01b03811681146105e257600080fd5b6000806040838503121561073357600080fd5b823561073e8161070b565b946020939093013593505050565b60006020828403121561075e57600080fd5b81356107048161070b565b6000806000806060858703121561077f57600080fd5b84356003811061078e57600080fd5b9350602085013567ffffffffffffffff808211156107ab57600080fd5b818701915087601f8301126107bf57600080fd5b8135818111156107ce57600080fd5b8860208285010111156107e057600080fd5b95986020929092019750949560400135945092505050565b60008060006060848603121561080d57600080fd5b833567ffffffffffffffff81111561082457600080fd5b8401610160818703121561083757600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b8181101561087a576020818701810151606086840101520161085d565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6000602082840312156108b357600080fd5b505191905056fea2646970667358221220cbbb25ca00560124d826212b50b04d9fcf4b669659b26a5031bc3fdf00619c3f64736f6c63430008130033",
    "sourceMap": "199:531:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:140:0;;;;;;:::i;:::-;;:::i;:::-;;2471:149;;;;;;;;;;-1:-1:-1;2471:149:0;;;;;:::i;:::-;;:::i;294:40:8:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;939:32:9;;;921:51;;909:2;894:18;294:40:8;;;;;;;;567:106:0;;;;;;;;;;-1:-1:-1;567:106:0;;;;;:::i;:::-;;:::i;1831:101:6:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:6;1273:6;-1:-1:-1;;;;;1273:6:6;1201:85;;893:186:0;;;;;;;;;;-1:-1:-1;893:186:0;;;;;:::i;:::-;;:::i;445:29::-;;;;;;;;;;-1:-1:-1;445:29:0;;;;-1:-1:-1;;;;;445:29:0;;;3338:83;;;;;;;;;;;;;:::i;3640:133::-;;;;;;;;;;-1:-1:-1;3640:133:0;;;;;:::i;:::-;;:::i;3068:111::-;;;;;;;;;;;;;:::i;:::-;;;2725:25:9;;;2713:2;2698:18;3068:111:0;2579:177:9;2225:104:0;;;:::i;2081:198:6:-;;;;;;;;;;-1:-1:-1;2081:198:6;;;;;:::i;:::-;;:::i;488:240:8:-;;;;;;;;;;-1:-1:-1;488:240:8;;;;;:::i;:::-;707:14;;;;;;;;;675:16;707:14;;;488:240;;;;;;;;;;;;;;;:::i;2845:140:0:-;1094:13:6;:11;:13::i;:::-;2924:10:0::1;::::0;:54:::1;::::0;-1:-1:-1;;;2924:54:0;;4335:10:9;4323:23;;2924:54:0::1;::::0;::::1;4305:42:9::0;-1:-1:-1;;;;;2924:10:0;;::::1;::::0;:19:::1;::::0;2951:9:::1;::::0;4278:18:9;;2924:54:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;2845:140:::0;:::o;2471:149::-;1094:13:6;:11;:13::i;:::-;2567:10:0::1;::::0;:46:::1;::::0;-1:-1:-1;;;2567:46:0;;-1:-1:-1;;;;;4566:32:9;;;2567:46:0::1;::::0;::::1;4548:51:9::0;4615:18;;;4608:34;;;2567:10:0;;::::1;::::0;:21:::1;::::0;4521:18:9;;2567:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;567:106:::0;1094:13:6;:11;:13::i;:::-;642:10:0::1;:24:::0;;-1:-1:-1;;;;;;642:24:0::1;-1:-1:-1::0;;;;;642:24:0;;;::::1;::::0;;;::::1;::::0;;567:106::o;1831:101:6:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;893:186:0:-;1001:24;:22;:24::i;:::-;1035:37;1043:4;1049:7;;1058:13;1035:7;:37::i;:::-;893:186;;;;:::o;3338:83::-;1094:13:6;:11;:13::i;:::-;3390:10:0::1;;;;;;;;;-1:-1:-1::0;;;;;3390:10:0::1;-1:-1:-1::0;;;;;3390:22:0::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;3640:133:::0;1094:13:6;:11;:13::i;:::-;3725:10:0::1;::::0;:41:::1;::::0;-1:-1:-1;;;3725:41:0;;-1:-1:-1;;;;;939:32:9;;;3725:41:0::1;::::0;::::1;921:51:9::0;3725:10:0;;::::1;::::0;:24:::1;::::0;894:18:9;;3725:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3640:133:::0;:::o;3068:111::-;3137:10;;:35;;-1:-1:-1;;;3137:35:0;;3166:4;3137:35;;;921:51:9;3111:7:0;;-1:-1:-1;;;;;3137:10:0;;:20;;894:18:9;;3137:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3130:42;;3068:111;:::o;2225:104::-;2269:10;;:53;;-1:-1:-1;;;2269:53:0;;2316:4;2269:53;;;921:51:9;-1:-1:-1;;;;;2269:10:0;;;;:20;;2297:9;;894:18:9;;2269:53:0;;;;;;;;;;;;;;;;;;;2081:198:6;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:6;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:6;;5268:2:9;2161:73:6::1;::::0;::::1;5250:21:9::0;5307:2;5287:18;;;5280:30;5346:34;5326:18;;;5319:62;-1:-1:-1;;;5397:18:9;;;5390:36;5443:19;;2161:73:6::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:7;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;5675:2:9;1414:68:6;;;5657:21:9;;;5694:18;;;5687:30;5753:34;5733:18;;;5726:62;5805:18;;1414:68:6;5473:356:9;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3837:110:0:-;3928:10;;-1:-1:-1;;;;;3928:10:0;3906;:33;3898:42;;;;;1839:286;2095:23;;-1:-1:-1;;;2095:23:0;;6036:2:9;2095:23:0;;;6018:21:9;6075:2;6055:18;;;6048:30;-1:-1:-1;;;6094:18:9;;;6087:43;6147:18;;2095:23:0;5834:337:9;14:276;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:9:o;295:139::-;-1:-1:-1;;;;;378:31:9;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:9:o;983:274::-;1061:6;1114:2;1102:9;1093:7;1089:23;1085:32;1082:52;;;1130:1;1127;1120:12;1082:52;1169:9;1156:23;1188:39;1221:5;1188:39;:::i;1262:817::-;1364:6;1372;1380;1388;1441:2;1429:9;1420:7;1416:23;1412:32;1409:52;;;1457:1;1454;1447:12;1409:52;1496:9;1483:23;1535:1;1528:5;1525:12;1515:40;;1551:1;1548;1541:12;1515:40;1574:5;-1:-1:-1;1630:2:9;1615:18;;1602:32;1653:18;1683:14;;;1680:34;;;1710:1;1707;1700:12;1680:34;1748:6;1737:9;1733:22;1723:32;;1793:7;1786:4;1782:2;1778:13;1774:27;1764:55;;1815:1;1812;1805:12;1764:55;1855:2;1842:16;1881:2;1873:6;1870:14;1867:34;;;1897:1;1894;1887:12;1867:34;1942:7;1937:2;1928:6;1924:2;1920:15;1916:24;1913:37;1910:57;;;1963:1;1960;1953:12;1910:57;1262:817;;1994:2;1986:11;;;;;-1:-1:-1;2016:6:9;;2069:2;2054:18;2041:32;;-1:-1:-1;1262:817:9;-1:-1:-1;;;1262:817:9:o;3021:528::-;3130:6;3138;3146;3199:2;3187:9;3178:7;3174:23;3170:32;3167:52;;;3215:1;3212;3205:12;3167:52;3255:9;3242:23;3288:18;3280:6;3277:30;3274:50;;;3320:1;3317;3310:12;3274:50;3343:22;;3399:3;3381:16;;;3377:26;3374:46;;;3416:1;3413;3406:12;3374:46;3439:2;3488;3473:18;;3460:32;;-1:-1:-1;3539:2:9;3524:18;;;3511:32;;3021:528;-1:-1:-1;;;3021:528:9:o;3554:602::-;3729:2;3718:9;3711:21;3692:4;3761:6;3755:13;3804:6;3799:2;3788:9;3784:18;3777:34;3829:1;3839:144;3853:6;3850:1;3847:13;3839:144;;;3966:4;3950:14;;;3946:25;;3940:32;3935:2;3916:17;;;3912:26;3905:68;3868:12;3839:144;;;3843:3;4032:1;4027:2;4018:6;4007:9;4003:22;3999:31;3992:42;4102:2;4095;4091:7;4086:2;4078:6;4074:15;4070:29;4059:9;4055:45;4051:54;4043:62;;;4143:6;4136:4;4125:9;4121:20;4114:36;3554:602;;;;;:::o;4877:184::-;4947:6;5000:2;4988:9;4979:7;4975:23;4971:32;4968:52;;;5016:1;5013;5006:12;4968:52;-1:-1:-1;5039:16:9;;4877:184;-1:-1:-1;4877:184:9:o",
    "linkReferences": {},
    "immutableReferences": {
      "841": [
        {
          "start": 297,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addStake(uint32)": "0396cb60",
    "deposit()": "d0e30db0",
    "entryPoint()": "b0d691fe",
    "getDeposit()": "c399ec88",
    "owner()": "8da5cb5b",
    "postOp(uint8,bytes,uint256)": "a9a23409",
    "renounceOwnership()": "715018a6",
    "setEntryPoint(address)": "584465f2",
    "transferOwnership(address)": "f2fde38b",
    "unlockStake()": "bb9fe6bf",
    "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "f465c77e",
    "verifyingSigner()": "23d9ac9b",
    "withdrawStake(address)": "c23a5cea",
    "withdrawTo(address,uint256)": "205c2878"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyingSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyingSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- the unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp  zero length to signify postOp is not required.\",\"deadline\":\"the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"to withdraw\",\"withdrawAddress\":\"target to send to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"add a deposit for this paymaster, used for paying for transaction fees\"},\"getDeposit()\":{\"notice\":\"return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"unlockStake()\":{\"notice\":\"unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw value from the deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PaymasterCustom.sol\":\"CustomPaymaster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b\",\"dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326\",\"dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec\",\"dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61\",\"dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b\",\"dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806\",\"dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/PaymasterCustom.sol\":{\"keccak256\":\"0x102f3402d0e260324f4b248daa3ee0279278b42efe74ba565c6b07498e228228\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b7fc03fa50d200dee8727b60a791a38b59a220b52542ec481ddf74a0844f02eb\",\"dweb:/ipfs/QmS9ADY5hsTC9QifyekfMsdQ7pmEtbphRexexCxyvMQj8M\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_verifyingSigner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addStake"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "entryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IPaymaster.PostOpMode",
              "name": "mode",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "actualGasCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unlockStake"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "maxCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validatePaymasterUserOp",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "context",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyingSigner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawStake"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "withdrawAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStake(uint32)": {
            "params": {
              "unstakeDelaySec": "- the unstake delay for this paymaster. Can only be increased."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "postOp(uint8,bytes,uint256)": {
            "params": {
              "actualGasCost": "- actual gas used so far (without this postOp call).",
              "context": "- the context value returned by validatePaymasterUserOp",
              "mode": "enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "params": {
              "maxCost": "the maximum cost of this transaction (based on maximum gas and gas price from userOp)",
              "userOp": "the user operation",
              "userOpHash": "hash of the user's request data."
            },
            "returns": {
              "context": "value to send to a postOp  zero length to signify postOp is not required.",
              "deadline": "the last block timestamp this operation is valid, or zero if it is valid indefinitely.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          },
          "withdrawStake(address)": {
            "params": {
              "withdrawAddress": "the address to send withdrawn value."
            }
          },
          "withdrawTo(address,uint256)": {
            "params": {
              "amount": "to withdraw",
              "withdrawAddress": "target to send to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addStake(uint32)": {
            "notice": "add stake for this paymaster. This method can also carry eth value to add to the current stake."
          },
          "deposit()": {
            "notice": "add a deposit for this paymaster, used for paying for transaction fees"
          },
          "getDeposit()": {
            "notice": "return current paymaster's deposit on the entryPoint."
          },
          "postOp(uint8,bytes,uint256)": {
            "notice": "post-operation handler. Must verify sender is the entryPoint"
          },
          "unlockStake()": {
            "notice": "unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"
          },
          "validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "payment validation: check if paymaster agree to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."
          },
          "withdrawStake(address)": {
            "notice": "withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"
          },
          "withdrawTo(address,uint256)": {
            "notice": "withdraw value from the deposit"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PaymasterCustom.sol": "CustomPaymaster"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BasePaymaster.sol": {
        "keccak256": "0x1b12d38bc24b410bc582a5fc0f5155184e68e14630b1391ef3d4c3cd407354b6",
        "urls": [
          "bzz-raw://793e93f891872eef7c5a0d915f220845eb6881db7e6ede8d1f15e7140c66c20b",
          "dweb:/ipfs/QmQMeyFdAocP4aL1JJu8sQqHjnJBtXoCdPbvPQmTyauWrt"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0xd9571db5b8274d652959060476948d100b07bf5a7e2468bde3b75063d68d3e26",
        "urls": [
          "bzz-raw://73fbcd16fc5aa422bc14e5f8e312aa8a1aa68a5b1cdbe89536954752df66b326",
          "dweb:/ipfs/Qmf4HRjWGump1Hn7um5yEFzjd4EpymEco8tbPyMcn85M9C"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x51e4234bc9255d961214066d0eb08cbabea3821db32dc62215672f6497962ef9",
        "urls": [
          "bzz-raw://67db72c8acb87fb77536c15ee14e65fb74f5c76cdf6a46dd0f45d88d5d20afec",
          "dweb:/ipfs/QmSiZd2KGfX5z9iEjGDoYfY8ync9kTUfdYMh1i8dnQFQUT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IPaymaster.sol": {
        "keccak256": "0x4f5ef1112ffff9eea6083c900c1fd3e3c7cceb860b103c8b0ce36b0cfbc9bc33",
        "urls": [
          "bzz-raw://b7bc9d9757aa9cdbdbd264fd1dd2f30496e3886ebd2b8c7cf0392668316c3c61",
          "dweb:/ipfs/QmR7idTPxRtBRgj7iveQnMySY1ZQEZccNK9aEJLb68t2hT"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0x1b7b01d6eb948213ad51b33c3951469af52e8001c1827dabacbd55eb1f0c90a3",
        "urls": [
          "bzz-raw://d164d7b2d8d24ceda5f395c435d457a19a2f3bfcb496317a7958f1a43da4672b",
          "dweb:/ipfs/QmXJ8SxCF8jZ1oLgDXvCXGi3xk7oVWMYz8MwtNSxVwzBCb"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x548134a6c652a9e4730beb582b94785587f93f91b0dded2a27bbda3048911ddd",
        "urls": [
          "bzz-raw://4156e408fb62a783d11293fc5b6880ec786e0d4b704abbd96fbe06ac3b03b806",
          "dweb:/ipfs/QmWoiGVR8xUQbHoP5AhM29DkezWGC7Cs66stCpMqkkP6Lq"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/PaymasterCustom.sol": {
        "keccak256": "0x102f3402d0e260324f4b248daa3ee0279278b42efe74ba565c6b07498e228228",
        "urls": [
          "bzz-raw://b7fc03fa50d200dee8727b60a791a38b59a220b52542ec481ddf74a0844f02eb",
          "dweb:/ipfs/QmS9ADY5hsTC9QifyekfMsdQ7pmEtbphRexexCxyvMQj8M"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PaymasterCustom.sol",
    "id": 879,
    "exportedSymbols": {
      "BasePaymaster": [
        204
      ],
      "Context": [
        830
      ],
      "CustomPaymaster": [
        878
      ],
      "IAggregator": [
        238
      ],
      "IEntryPoint": [
        427
      ],
      "IPaymaster": [
        462
      ],
      "IStakeManager": [
        566
      ],
      "Ownable": [
        808
      ],
      "UserOperation": [
        591
      ],
      "UserOperationLib": [
        695
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:695:8",
    "nodes": [
      {
        "id": 832,
        "nodeType": "PragmaDirective",
        "src": "36:24:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 833,
        "nodeType": "ImportDirective",
        "src": "99:69:8",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "file": "../lib/account-abstraction/contracts/core/BasePaymaster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 879,
        "sourceUnit": 205,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 878,
        "nodeType": "ContractDefinition",
        "src": "199:531:8",
        "nodes": [
          {
            "id": 839,
            "nodeType": "UsingForDirective",
            "src": "247:41:8",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 836,
              "name": "UserOperationLib",
              "nameLocations": [
                "253:16:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 695,
              "src": "253:16:8"
            },
            "typeName": {
              "id": 838,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 837,
                "name": "UserOperation",
                "nameLocations": [
                  "274:13:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 591,
                "src": "274:13:8"
              },
              "referencedDeclaration": 591,
              "src": "274:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserOperation_$591_storage_ptr",
                "typeString": "struct UserOperation"
              }
            }
          },
          {
            "id": 841,
            "nodeType": "VariableDeclaration",
            "src": "294:40:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "23d9ac9b",
            "mutability": "immutable",
            "name": "verifyingSigner",
            "nameLocation": "319:15:8",
            "scope": 878,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 840,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "294:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 857,
            "nodeType": "FunctionDefinition",
            "src": "341:141:8",
            "nodes": [],
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "431:51:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 852,
                      "name": "verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "441:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 853,
                      "name": "_verifyingSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 846,
                      "src": "459:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "441:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "441:34:8"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 849,
                    "name": "_entryPoint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "418:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  }
                ],
                "id": 850,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 848,
                  "name": "BasePaymaster",
                  "nameLocations": [
                    "404:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 204,
                  "src": "404:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "404:26:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "365:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "353:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$427",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 843,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 842,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "353:11:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "353:11:8"
                    },
                    "referencedDeclaration": 427,
                    "src": "353:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$427",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "_verifyingSigner",
                  "nameLocation": "386:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "378:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:51:8"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:8"
            },
            "scope": 878,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 877,
            "nodeType": "FunctionDefinition",
            "src": "488:240:8",
            "nodes": [],
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "697:31:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "",
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "715:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "30",
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "719:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 874,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "714:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_rational_0_by_1_$",
                      "typeString": "tuple(literal_string \"\",int_const 0)"
                    }
                  },
                  "functionReturnParameters": 871,
                  "id": 875,
                  "nodeType": "Return",
                  "src": "707:14:8"
                }
              ]
            },
            "baseFunctions": [
              51
            ],
            "functionSelector": "f465c77e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatePaymasterUserOp",
            "nameLocation": "497:23:8",
            "overrides": {
              "id": 866,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "627:8:8"
            },
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 860,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "544:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "521:29:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$591_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 858,
                      "name": "UserOperation",
                      "nameLocations": [
                        "521:13:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 591,
                      "src": "521:13:8"
                    },
                    "referencedDeclaration": 591,
                    "src": "521:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$591_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "560:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "552:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "maxCost",
                  "nameLocation": "580:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "572:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "520:68:8"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "context",
                  "nameLocation": "666:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "653:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "683:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 877,
                  "src": "675:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:40:8"
            },
            "scope": 878,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 834,
              "name": "BasePaymaster",
              "nameLocations": [
                "227:13:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 204,
              "src": "227:13:8"
            },
            "id": 835,
            "nodeType": "InheritanceSpecifier",
            "src": "227:13:8"
          }
        ],
        "canonicalName": "CustomPaymaster",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          878,
          204,
          808,
          830,
          462
        ],
        "name": "CustomPaymaster",
        "nameLocation": "208:15:8",
        "scope": 879,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 8
}